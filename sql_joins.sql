USE sakila;
SELECT * from sakila.category;
SELECT films, name FROM sakila.category;
SELECT COUNT(fc.film_id) AS number_of_films FROM sakila.film;

-- 1. List the number of films per category.
-- STEPS:
-- 1. first select the table and alias it as c
-- 2. selct the two columns from the table
-- 3. find the common element to join the table ( foreign keys)
SELECT c.name AS category_name, 
COUNT(fc.film_id) AS number_of_films
FROM sakila.category c 

JOIN film_category fc ON c.category_id = fc.category_id 
GROUP BY c.name 
ORDER BY number_of_films DESC;

-- 2. Retrieve the store ID, city, and country for each store.
SELECT 
    s.store_id,                
    ci.city,                  
    co.country                 
FROM 
    store s
JOIN 
    address a ON s.address_id = a.address_id      
JOIN 
    city ci ON a.city_id = ci.city_id            
JOIN 
    country co ON ci.country_id = co.country_id   
ORDER BY 
    s.store_id;     
    
-- 3. Calculate the total revenue generated by each store in dollars.
SELECT s.store_id FROM sakila.store s
SUM(p.amount) AS total_revenue  FROM sakila.payment; 

SELECT 
    s.store_id,                                
    SUM(p.amount) AS total_revenue             
FROM 
    store s
JOIN 
    inventory i ON s.store_id = i.store_id    
JOIN 
    rental r ON i.inventory_id = r.inventory_id 
JOIN 
    payment p ON r.rental_id = p.rental_id     
GROUP BY 
    s.store_id                                
ORDER BY 
    total_revenue DESC;       
    
-- 4. Determine the average running time of films for each category.
SELECT 
    c.name AS category_name,                  
    AVG(f.length) AS average_running_time     
FROM 
    category c
JOIN 
    film_category fc ON c.category_id = fc.category_id  
JOIN 
    film f ON fc.film_id = f.film_id          
GROUP BY 
    c.name                                    
ORDER BY 
    average_running_time ASC;      